//Builtin plugins
//apply plugin: 'com.gradle.enterprise'
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'project-report'

//External plugins
apply plugin: 'com.fizzpod.info'
apply plugin: 'com.fizzpod.sweeney'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.github.spotbugs'


buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'    
  termsOfServiceAgree = 'yes'                                  
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileJava {
    options.release = 8
}

compileGroovy {
    options.release = 8
}

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url "https://plugins.gradle.org/m2/"
  }
}

dependencies {
	api gradleApi()
	implementation localGroovy()
}

sweeney {
	enforce 'jdk:[1.8,)'
	enforce 'gradle:[7.0.0,)'
}


spotbugs {
    ignoreFailures = true
    showStackTraces = true
    showProgress = true
    reportsDir = file("$buildDir/spotbugs")
}

dependencyLocking {
    lockAllConfigurations()
}

buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

tasks.register('resolveAndLockAll') {
    notCompatibleWithConfigurationCache("Filters configurations at execution time")
    doFirst {
        assert gradle.startParameter.writeDependencyLocks : "$path must be run from the command line with the `--write-locks` flag"
    }
    doLast {
        configurations.findAll {
            // Add any custom filtering on the configurations to be resolved
            it.canBeResolved
        }.each { it.resolve() }
    }
}